{"ast":null,"code":"var _jsxFileName = \"E:\\\\git repo\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\SearchComponent.js\",\n    _s = $RefreshSig$();\n\nimport { react } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { get, getAll, search } from \"./BooksAPI\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport BookCard from \"./BookCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchComponent = ({\n  Search,\n  returnButton,\n  AddBookto\n}) => {\n  _s();\n\n  const [SearchInput, SetSearchInput] = useState(\"\");\n  const [SearchedBooks, setSearchedBooks] = useState([]);\n\n  const InputHandle = event => {\n    SetSearchInput(event.target.value.trim().toLowerCase());\n    console.log(SearchInput);\n  };\n\n  useEffect(() => {\n    let isActive = true;\n\n    if (SearchInput) {\n      BooksAPI.search(SearchInput).then(res => {\n        if (res.error) {\n          console.log(res);\n        } else {\n          if (isActive) {\n            setSearchedBooks(res);\n          }\n        }\n      });\n    }\n\n    return () => {\n      isActive = false;\n      setSearchedBooks([]);\n    };\n  }, [SearchInput]);\n  const Results = SearchedBooks.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n    title: book.title,\n    authors: book.authors,\n    CoverImage: book.imageLinks.thumbnail,\n    bookShelf: book.shelf,\n    bookId: book.id,\n    book: {\n      book\n    },\n    AddBookto: AddBookto\n  }, book.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"close-search\",\n        onClick: returnButton,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          onChange: InputHandle,\n          value: SearchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), Results]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchComponent, \"aOTP5WkCU5HZtXmc/Ag5PWXDvj4=\");\n\n_c = SearchComponent;\nexport default SearchComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"sources":["E:/git repo/nd0191-c1-myreads-1/starter/src/SearchComponent.js"],"names":["react","useState","useEffect","get","getAll","search","BooksAPI","BookCard","SearchComponent","Search","returnButton","AddBookto","SearchInput","SetSearchInput","SearchedBooks","setSearchedBooks","InputHandle","event","target","value","trim","toLowerCase","console","log","isActive","then","res","error","Results","map","book","title","authors","imageLinks","thumbnail","shelf","id"],"mappings":"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","sourcesContent":["import {react} from \"react\"\r\nimport { useState,useEffect } from \"react\";\r\nimport { get, getAll, search } from \"./BooksAPI\";\r\nimport * as BooksAPI from \"./BooksAPI\"\r\nimport BookCard from \"./BookCard\";\r\n\r\n\r\nconst SearchComponent = ({Search,returnButton,AddBookto})=>{\r\n\r\n    const [SearchInput,SetSearchInput] = useState(\"\")\r\n    const [SearchedBooks,setSearchedBooks]= useState([])\r\n\r\n\r\n\r\n\r\n\r\n    const InputHandle = (event)=>{\r\n      SetSearchInput((event.target.value).trim().toLowerCase())\r\n      console.log(SearchInput)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n   useEffect(()=>{\r\n    let isActive = true\r\n    if(SearchInput) {\r\n\r\n    BooksAPI.search(SearchInput).then(res => {\r\n      if(res.error){\r\n        console.log(res)\r\n      }else{\r\n        if(isActive){\r\n        setSearchedBooks(res)\r\n      }\r\n      }\r\n    })}\r\n\r\n    return ()=>{\r\n      isActive = false\r\n      setSearchedBooks([])\r\n\r\n    }\r\n      \r\n},[SearchInput])\r\n   \r\n   \r\n\r\n   const Results =  SearchedBooks.map(book=>(\r\n    \r\n    <BookCard\r\n    key={book.id}\r\n    title={book.title}\r\n    authors={book.authors}\r\n    CoverImage={book.imageLinks.thumbnail}\r\n    bookShelf={book.shelf}\r\n    bookId={book.id}\r\n    book={{book}}\r\n    AddBookto={AddBookto}\r\n  \r\n    />\r\n  ))\r\n   \r\n           \r\n    return (\r\n\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <a\r\n                className=\"close-search\"\r\n          onClick={returnButton}\r\n              >\r\n                Close\r\n              </a>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by title, author, or ISBN\"\r\n                  onChange={InputHandle}\r\n                  value ={SearchInput}\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\"></ol>\r\n              {Results}\r\n            </div>\r\n          </div>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nexport default SearchComponent;"]},"metadata":{},"sourceType":"module"}