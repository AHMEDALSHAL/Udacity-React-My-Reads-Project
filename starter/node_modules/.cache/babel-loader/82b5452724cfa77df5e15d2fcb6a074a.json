{"ast":null,"code":"var _jsxFileName = \"E:\\\\git repo\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\SearchComponent.js\",\n    _s = $RefreshSig$();\n\nimport { react } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { get, getAll, search } from \"./BooksAPI\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport BookCard from \"./BookCard\";\nimport propTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchComponent = ({\n  Search,\n  returnButton,\n  SearchedBooks,\n  AddBookto\n}) => {\n  _s();\n\n  const [SearchInput, SetSearchInput] = useState(\"\");\n\n  const InputHandle = event => {\n    SetSearchInput(event.target.value);\n    console.log(SearchInput);\n    Search(`${SearchInput}`);\n  };\n\n  const ResultBooks = SearchedBooks;\n  console.log(ResultBooks);\n  let Results;\n\n  if (!error) {\n    Results = ResultBooks.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n      title: book.title,\n      authors: book.authors,\n      CoverImage: book.imageLinks.smallThumbnail,\n      bookShelf: book.shelf,\n      bookId: book.id,\n      AddBookto: AddBookto\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"close-search\",\n        onClick: returnButton,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          onChange: InputHandle,\n          value: SearchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), Results]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchComponent, \"XhKqB+xkUhosXhXfJWIpVG1XWzY=\");\n\n_c = SearchComponent;\nSearchComponent.propTypes = {\n  SearchedBooks: propTypes.array.isRequired\n};\nexport default SearchComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"sources":["E:/git repo/nd0191-c1-myreads-1/starter/src/SearchComponent.js"],"names":["react","useState","useEffect","get","getAll","search","BooksAPI","BookCard","propTypes","SearchComponent","Search","returnButton","SearchedBooks","AddBookto","SearchInput","SetSearchInput","InputHandle","event","target","value","console","log","ResultBooks","Results","error","map","book","title","authors","imageLinks","smallThumbnail","shelf","id","array","isRequired"],"mappings":";;;AAAA,SAAQA,KAAR,QAAoB,OAApB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,QAAoC,YAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA,YAAR;AAAqBC,EAAAA,aAArB;AAAmCC,EAAAA;AAAnC,CAAD,KAAiD;AAAA;;AAErE,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA+Bd,QAAQ,CAAC,EAAD,CAA7C;;AAEA,QAAMe,WAAW,GAAIC,KAAD,IAAS;AACzBF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACAJ,IAAAA,MAAM,CAAE,GAAEI,WAAY,EAAhB,CAAN;AAEH,GALD;;AASD,QAAMQ,WAAW,GAAGV,aAApB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AAEA,MAAIC,OAAJ;;AACC,MAAI,CAACC,KAAL,EAAY;AACVD,IAAAA,OAAO,GAAGD,WAAW,CAACG,GAAZ,CAAgBC,IAAI,iBAC9B,QAAC,QAAD;AACA,MAAA,KAAK,EAAEA,IAAI,CAACC,KADZ;AAEA,MAAA,OAAO,EAAED,IAAI,CAACE,OAFd;AAGA,MAAA,UAAU,EAAEF,IAAI,CAACG,UAAL,CAAgBC,cAH5B;AAIA,MAAA,SAAS,EAAEJ,IAAI,CAACK,KAJhB;AAKA,MAAA,MAAM,EAAEL,IAAI,CAACM,EALb;AAMA,MAAA,SAAS,EAAEnB;AANX;AAAA;AAAA;AAAA;AAAA,YADU,CAAV;AASD;;AAID,sBAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEJ,QAAA,OAAO,EAAEF,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,kCAFd;AAGE,UAAA,QAAQ,EAAEK,WAHZ;AAIE,UAAA,KAAK,EAAGF;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,EAEGS,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA2BH,CA1DD;;GAAMd,e;;KAAAA,e;AA6DNA,eAAe,CAACD,SAAhB,GAA4B;AAE1BI,EAAAA,aAAa,EAAGJ,SAAS,CAACyB,KAAV,CAAgBC;AAFN,CAA5B;AAMA,eAAezB,eAAf","sourcesContent":["import {react} from \"react\"\r\nimport { useState,useEffect } from \"react\";\r\nimport { get, getAll, search } from \"./BooksAPI\";\r\nimport * as BooksAPI from \"./BooksAPI\"\r\nimport BookCard from \"./BookCard\";\r\nimport propTypes from \"prop-types\";\r\n\r\n\r\nconst SearchComponent = ({Search,returnButton,SearchedBooks,AddBookto})=>{\r\n\r\n    const [SearchInput,SetSearchInput] = useState(\"\")\r\n\r\n    const InputHandle = (event)=>{\r\n        SetSearchInput(event.target.value)\r\n        console.log(SearchInput)\r\n        Search(`${SearchInput}`)\r\n                             \r\n    }\r\n\r\n    \r\n   \r\n   const ResultBooks = SearchedBooks\r\n   console.log(ResultBooks)\r\n\r\n   let Results\r\n    if (!error) {\r\n      Results = ResultBooks.map(book => (\r\n      <BookCard \r\n      title={book.title}\r\n      authors={book.authors}\r\n      CoverImage={book.imageLinks.smallThumbnail}\r\n      bookShelf={book.shelf}\r\n      bookId={book.id}\r\n      AddBookto={AddBookto}\r\n      />\r\n  ))}\r\n\r\n\r\n            \r\n    return (\r\n\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <a\r\n                className=\"close-search\"\r\n          onClick={returnButton}\r\n              >\r\n                Close\r\n              </a>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by title, author, or ISBN\"\r\n                  onChange={InputHandle}\r\n                  value ={SearchInput}\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\"></ol>\r\n              {Results}\r\n            </div>\r\n          </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nSearchComponent.propTypes = {\r\n\r\n  SearchedBooks : propTypes.array.isRequired,\r\n\r\n  };\r\n\r\nexport default SearchComponent;"]},"metadata":{},"sourceType":"module"}