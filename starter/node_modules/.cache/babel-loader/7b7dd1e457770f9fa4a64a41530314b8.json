{"ast":null,"code":"var _jsxFileName = \"E:\\\\git repo\\\\nd0191-c1-myreads-1\\\\starter\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport SearchComponent from \"./SearchComponent\";\nimport BookShelves from \"./BookShelves\";\nimport { useEffect } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  let navigate = useNavigate();\n  const [AllBooks, setAllBooks] = useState([]);\n  const [SearchedBooks, setSearchedBooks] = useState([]);\n  let getBooks;\n  useEffect(() => {\n    getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setAllBooks(res);\n    };\n\n    getBooks();\n  }, []);\n\n  const AddBookto = async (book, Bookshelf) => {\n    await BooksAPI.update(book.book, Bookshelf);\n    const res = await BooksAPI.getAll();\n    setAllBooks(res);\n  };\n\n  useEffect(() => {\n    const Search = async query => {\n      const res = await BooksAPI.search(query, 10);\n      setSearchedBooks(res);\n    };\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: showSearchPage ? /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: /*#__PURE__*/_jsxDEV(SearchComponent, {\n          AddBookto: AddBookto,\n          SearchedBooks: SearchedBooks,\n          Search: Search,\n          returnButton: () => setShowSearchpage(navigate(\"/\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(BookShelves, {\n          AddBookto: AddBookto,\n          Books: AllBooks,\n          openSearch: () => setShowSearchpage(!showSearchPage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uldp9Cf9fa0HBUDhAV+9S5L887s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/git repo/nd0191-c1-myreads-1/starter/src/App.js"],"names":["useState","Routes","Route","useNavigate","Link","SearchComponent","BookShelves","useEffect","BooksAPI","App","showSearchPage","setShowSearchpage","navigate","AllBooks","setAllBooks","SearchedBooks","setSearchedBooks","getBooks","res","getAll","AddBookto","book","Bookshelf","update","Search","query","search"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAqBC,WAArB,QAAuC,kBAAvC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;AACA,MAAIY,QAAQ,GAAGT,WAAW,EAA1B;AAEF,QAAM,CAACU,QAAD,EAAUC,WAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,aAAD,EAAeC,gBAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AAGA,MAAIiB,QAAJ;AAGAV,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,QAAQ,GAAG,YAAY;AACrB,YAAMC,GAAG,GAAG,MAAMV,QAAQ,CAACW,MAAT,EAAlB;AACAL,MAAAA,WAAW,CAACI,GAAD,CAAX;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMG,SAAS,GAAG,OAAOC,IAAP,EAAYC,SAAZ,KAAwB;AACxC,UAAMd,QAAQ,CAACe,MAAT,CAAgBF,IAAI,CAACA,IAArB,EAA0BC,SAA1B,CAAN;AACA,UAAMJ,GAAG,GAAG,MAAMV,QAAQ,CAACW,MAAT,EAAlB;AACAL,IAAAA,WAAW,CAACI,GAAD,CAAX;AAEC,GALH;;AAOEX,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMiB,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC9B,YAAMP,GAAG,GAAG,MAAMV,QAAQ,CAACkB,MAAT,CAAgBD,KAAhB,EAAsB,EAAtB,CAAlB;AACAT,MAAAA,gBAAgB,CAACE,GAAD,CAAhB;AACD,KAHD;AAID,GALQ,EAKP,CAACO,KAAD,CALO,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,gBACCf,cAAc,gBAEX,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,SAAd;AAAwB,QAAA,OAAO,eAC7B,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAEU,SAA5B;AAAuC,UAAA,aAAa,EAAEL,aAAtD;AAAqE,UAAA,MAAM,EAAES,MAA7E;AAAqF,UAAA,YAAY,EAAE,MAAMb,iBAAiB,CAACC,QAAQ,CAAC,GAAD,CAAT;AAA1H;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFW,gBASb,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,OAAO,eAC3B,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEQ,SAAxB;AAAoC,UAAA,KAAK,EAAEP,QAA3C;AAAqD,UAAA,UAAU,EAAE,MAAMF,iBAAiB,CAAC,CAACD,cAAF;AAAxF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAzDQD,G;UAEQN,W;;;KAFRM,G;AA2DT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport {Routes,Route,useNavigate} from \"react-router-dom\"\r\nimport {Link} from \"react-router-dom\"\r\nimport SearchComponent from \"./SearchComponent\";\r\nimport BookShelves from \"./BookShelves\"\r\nimport {useEffect} from \"react\"\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nfunction App() {\r\n  const [showSearchPage, setShowSearchpage] = useState(false);\r\n  let navigate = useNavigate()\r\n\r\nconst [AllBooks,setAllBooks]= useState([]);\r\nconst [SearchedBooks,setSearchedBooks]= useState([]);\r\n\r\n\r\nlet getBooks\r\n\r\n\r\nuseEffect(()=>{\r\n  getBooks = async () => {\r\n    const res = await BooksAPI.getAll();\r\n    setAllBooks(res)\r\n  };\r\n  getBooks();\r\n},[])\r\n\r\nconst AddBookto = async (book,Bookshelf)=>{\r\n  await BooksAPI.update(book.book,Bookshelf)\r\n  const res = await BooksAPI.getAll()\r\n  setAllBooks(res)\r\n  \r\n  };\r\n\r\n  useEffect(()=>{\r\n    const Search = async (query) => {\r\n      const res = await BooksAPI.search(query,10)\r\n      setSearchedBooks(res)\r\n    }\r\n  },[query])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n      {showSearchPage ? (\r\n        \r\n          <Route path = \"/search\" element={\r\n            <SearchComponent AddBookto={AddBookto} SearchedBooks={SearchedBooks} Search={Search} returnButton={() => setShowSearchpage(navigate(\"/\"))}/>\r\n          }\r\n          \r\n          />\r\n         \r\n      ) : (\r\n        <Route exact path=\"/\" element={\r\n          <BookShelves AddBookto={AddBookto}  Books={AllBooks} openSearch={() => setShowSearchpage(!showSearchPage)}/>\r\n\r\n        }/>\r\n\r\n      )}\r\n    </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}